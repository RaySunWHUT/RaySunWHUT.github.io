import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as p,c as d,b as s,d as a,a as n,w as e,e as l}from"./app-DXKPJHsU.js";const k="/assets/image-TMFggsmw.png",c="/assets/image-1-Dz87muMJ.png",h={},D=l(`<p>描述MySQL深分页问题&amp;解决方案</p><h2 id="一、问题描述" tabindex="-1"><a class="header-anchor" href="#一、问题描述"><span>一、问题描述</span></a></h2><p><strong>浅分页-定义</strong>：当offset值较小时，执行分页查询的SQL语句称为 “<strong>浅分页</strong>”<br><strong>深分页-定义</strong>：当SQL分页查询的 <strong>偏移量(OFFSET)</strong> 较大的时，会导致数据库出现 <strong>性能瓶颈(OOM)</strong><br> 故，将 <strong>查询偏移量(OFFSET)过大</strong> 的场景称为 ”<strong>深分页</strong>”<br><strong>e.g.</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">-- 注: limit &amp; offset 语法: limit offset, pageSize &lt;=&gt; limit ? offset ?</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">-- e.g. limit 100000, 10 &lt;=&gt;(等价于) limit 10 offset 100000</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">-- 排序字段要加索引/是索引列</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">SELECT</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> *</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> FROM</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> t_order </span><span style="color:#D73A49;--shiki-dark:#C678DD;">ORDER BY</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> id </span><span style="color:#D73A49;--shiki-dark:#C678DD;">LIMIT</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1000000</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">10</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、分页问题优化前提" tabindex="-1"><a class="header-anchor" href="#二、分页问题优化前提"><span>二、分页问题优化前提</span></a></h2><p>分页场景下必须加 order by，且order by的字段，必须是 索引列，否则无论怎样优化SQL，查询性能都很难提升</p><h2 id="三、分布式场景下的分页查询" tabindex="-1"><a class="header-anchor" href="#三、分布式场景下的分页查询"><span>三、分布式场景下的分页查询</span></a></h2><p>分布式场景下，由于数据存在于多个 <strong>分表</strong> 之中，当执行 <strong>分页查询</strong> 时，需要将 <strong>分页SQL语句</strong> 下推到各个MySQL实例的分表中执行，再在内存中聚合排序各分表的查询结果，最后返回。</p><p>但是，为了保证分页查询数据的正确性，需要 <strong>改写分页SQL语句</strong>。</p><p>e.g.</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">-- 原分页SQL语句</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">-- 原执行结果{(id: 4, t_col1: a), (id: 7, t_col1: b)}❌</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">select</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> *</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> from</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> t_order </span><span style="color:#D73A49;--shiki-dark:#C678DD;">order by</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> id </span><span style="color:#D73A49;--shiki-dark:#C678DD;">limit</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">-- 改写后的分页SQL语句</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">-- 原执行结果{(id: 1, t_col1: a), (id: 3, t_col1: b)}✅</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">select</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> *</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> from</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> t_order </span><span style="color:#D73A49;--shiki-dark:#C678DD;">order by</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> id </span><span style="color:#D73A49;--shiki-dark:#C678DD;">limit</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">4</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">-- 再比如,</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">-- 单机单表 场景</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">SELECT</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> *</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> FROM</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> t_order </span><span style="color:#D73A49;--shiki-dark:#C678DD;">ORDER BY</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> id </span><span style="color:#D73A49;--shiki-dark:#C678DD;">LIMIT</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1000000</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">10</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">-- 多MySQL实例&amp;多分表 场景</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">-- 改写后的正确SQL</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">SELECT</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> *</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> FROM</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> t_order </span><span style="color:#D73A49;--shiki-dark:#C678DD;">ORDER BY</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> id </span><span style="color:#D73A49;--shiki-dark:#C678DD;">LIMIT</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">1000010</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+k+`" alt="" tabindex="0"><figcaption></figcaption></figure><h2 id="四、深分页优化" tabindex="-1"><a class="header-anchor" href="#四、深分页优化"><span>四、深分页优化</span></a></h2><h3 id="_4-1、表主键id连续" tabindex="-1"><a class="header-anchor" href="#_4-1、表主键id连续"><span>4.1、表主键id连续</span></a></h3><p>当可保证 <strong>id的连续性</strong> 时，可根据 <strong>id范围</strong> 进行 <strong>分页</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">SELECT</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> *</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> FROM</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> t_order </span><span style="color:#D73A49;--shiki-dark:#C678DD;">WHERE</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> id </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">&gt;=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 100001</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> AND</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> id </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">&lt;=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 100010</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> ORDER BY</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> id</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4-2、带-last-条件-查询" tabindex="-1"><a class="header-anchor" href="#_4-2、带-last-条件-查询"><span>4.2、带 {last_条件} 查询</span></a></h3><p><strong>具体实现</strong>：可通过 <strong>记录上次查询结果</strong> 的<strong>最后1条记录</strong>的<strong>id</strong> 进行 <strong>分页查询</strong>(需要配合程序逻辑实现)<br><strong>场景限制</strong>：不支持 <strong>跳页</strong>(即 通过点击页码数字跳转)<br><strong>推荐使用场景</strong>：<strong>没有页码，滑动加载下一页，只有上/下一页按钮</strong> 的应用</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">SELECT</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> *</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> FROM</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> t_order </span><span style="color:#D73A49;--shiki-dark:#C678DD;">WHERE</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> id </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">&gt;=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> #{last_id} </span><span style="color:#D73A49;--shiki-dark:#C678DD;">LIMIT</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 10</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4-3、子查询" tabindex="-1"><a class="header-anchor" href="#_4-3、子查询"><span>4.3、子查询</span></a></h3><p>将查询条件转移到 <strong>主键索引</strong>，由于子查询中select选出字段只有 <strong>主键列(id)</strong>，故 <strong>使用了覆盖索引</strong>，<strong>减少了回表次数</strong>，进而<strong>减少了大量IO操作</strong>。</p>`,21),y=s("strong",null,"子查询改造",-1),B=s("br",null,null,-1),A=s("strong",null,"没有充分利用好子查询的定位/查询结果",-1),g=l(`<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;"># 原SQL</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">SELECT</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> *</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> FROM</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> t_order </span><span style="color:#D73A49;--shiki-dark:#C678DD;">ORDER BY</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> id </span><span style="color:#D73A49;--shiki-dark:#C678DD;">LIMIT</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1000000</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">10</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;"># 子查询改造</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">SELECT</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> *</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> FROM</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> t_order </span><span style="color:#D73A49;--shiki-dark:#C678DD;">WHERE</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> id </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="color:#D73A49;--shiki-dark:#C678DD;">SELECT</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> id </span><span style="color:#D73A49;--shiki-dark:#C678DD;">FROM</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> t_order </span><span style="color:#D73A49;--shiki-dark:#C678DD;">order by</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> id </span><span style="color:#D73A49;--shiki-dark:#C678DD;">limit</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1000000</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) </span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">LIMIT</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 10</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),C=l('<h3 id="_4-4、级联子查询" tabindex="-1"><a class="header-anchor" href="#_4-4、级联子查询"><span>4.4、级联子查询</span></a></h3><p>阿里巴巴java开发手册-关于深分页问题的解法<br> 使用 <strong>子查询 + 覆盖索引</strong> 在 <strong>最小化</strong> <strong>回表次数</strong> <strong>+</strong> <strong>IO操作次数</strong> 的情况下，查出符合条件的主键(id)值，然后再与 <strong>SELECT * 的SQL查询</strong> 做级联，查出符合条件的<strong>SQL语句</strong>。<br><img src="'+c+'" alt=""></p>',2),E=s("strong",null,"得物",-1),m={href:"https://juejin.cn/post/6985478936683610149",target:"_blank",rel:"noopener noreferrer"},u=l(`<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">-- 注：以下2条SQL等价</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">SELECT</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> t1.</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">*</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> FROM</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> t_order </span><span style="color:#D73A49;--shiki-dark:#C678DD;">AS</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> t1 </span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">INNER JOIN</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#D73A49;--shiki-dark:#C678DD;">SELECT</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> id </span><span style="color:#D73A49;--shiki-dark:#C678DD;">FROM</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> t_order </span><span style="color:#D73A49;--shiki-dark:#C678DD;">ORDER BY</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> id </span><span style="color:#D73A49;--shiki-dark:#C678DD;">LIMIT</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 100000</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> , </span><span style="color:#005CC5;--shiki-dark:#D19A66;">20</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="color:#D73A49;--shiki-dark:#C678DD;">AS</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> t2 </span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">ON</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> t1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#005CC5;--shiki-dark:#D19A66;">id</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> t2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#005CC5;--shiki-dark:#D19A66;">id</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">SELECT</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> t1.</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">*</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> FROM</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> t_order </span><span style="color:#D73A49;--shiki-dark:#C678DD;">AS</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> t1 , </span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#D73A49;--shiki-dark:#C678DD;">SELECT</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> id </span><span style="color:#D73A49;--shiki-dark:#C678DD;">FROM</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> t_order </span><span style="color:#D73A49;--shiki-dark:#C678DD;">ORDER BY</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> id </span><span style="color:#D73A49;--shiki-dark:#C678DD;">LIMIT</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 100000</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> , </span><span style="color:#005CC5;--shiki-dark:#D19A66;">20</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="color:#D73A49;--shiki-dark:#C678DD;">AS</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> t2 </span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">WHERE</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> t1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#005CC5;--shiki-dark:#D19A66;">id</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> t2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#005CC5;--shiki-dark:#D19A66;">id</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五、参考文献" tabindex="-1"><a class="header-anchor" href="#五、参考文献"><span>五、参考文献</span></a></h2>`,2),b={href:"https://mp.weixin.qq.com/s/ZEwGKvRCyvAgGlmeseAS7g",target:"_blank",rel:"noopener noreferrer"},v={href:"https://juejin.cn/post/6985478936683610149",target:"_blank",rel:"noopener noreferrer"},F={href:"https://javaguide.cn/high-performance/deep-pagination-optimization.html#%E5%AD%90%E6%9F%A5%E8%AF%A2",target:"_blank",rel:"noopener noreferrer"};function f(_,S){const r=o("font"),i=o("ExternalLinkIcon");return p(),d("div",null,[D,s("p",null,[a("京东解法: "),y,a("，可一定程度上降低OOM概率"),B,s("strong",null,[n(r,{color:"red"},{default:e(()=>[a("注")]),_:1})]),a("：个人认为不够好，不如一次性在子查询中将满足偏移量的所有id全查出来，而不是仅在子查询已经定位到满足offset的第一条记录的id后，就直接返回；然后再交给主表，使用 >= 再定位查找1遍，这种做法 "),A]),g,s("p",null,[s("strong",null,[n(r,{color:"red"},{default:e(()=>[a("注")]),_:1})]),a("：京东认为，此方案数据查询量级较大时，仍然有OOM风险，故建议子查询只作为应急过渡方案.")]),C,s("p",null,[s("strong",null,[n(r,{color:"red"},{default:e(()=>[a("注")]),_:1})]),a("："),E,a("官方使用此方案解决深分页问题，详见"),s("a",m,[a("此处"),n(i)])]),u,s("ol",null,[s("li",null,[s("a",b,[a("https://mp.weixin.qq.com/s/ZEwGKvRCyvAgGlmeseAS7g"),n(i)])]),s("li",null,[s("a",v,[a("https://juejin.cn/post/6985478936683610149"),n(i)])]),s("li",null,[s("a",F,[a("https://javaguide.cn/high-performance/deep-pagination-optimization.html#子查询"),n(i)])])])])}const T=t(h,[["render",f],["__file","深分页.html.vue"]]),x=JSON.parse('{"path":"/system%20design/%E5%88%86%E9%A1%B5%E9%97%AE%E9%A2%98/%E6%B7%B1%E5%88%86%E9%A1%B5.html","title":"深分页问题","lang":"zh-CN","frontmatter":{"title":"深分页问题","index":true,"category":["系统设计"],"tag":["分页"],"date":"2024-05-05T00:00:00.000Z","article":true,"star":false,"description":"描述MySQL深分页问题&解决方案","head":[["meta",{"property":"og:url","content":"https://raysunwhut.github.io/system%20design/%E5%88%86%E9%A1%B5%E9%97%AE%E9%A2%98/%E6%B7%B1%E5%88%86%E9%A1%B5.html"}],["meta",{"property":"og:site_name","content":"浪客剑心"}],["meta",{"property":"og:title","content":"深分页问题"}],["meta",{"property":"og:description","content":"描述MySQL深分页问题&解决方案"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-12T09:12:55.000Z"}],["meta",{"property":"article:tag","content":"分页"}],["meta",{"property":"article:published_time","content":"2024-05-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-12T09:12:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"深分页问题\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-05T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-12T09:12:55.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"一、问题描述","slug":"一、问题描述","link":"#一、问题描述","children":[]},{"level":2,"title":"二、分页问题优化前提","slug":"二、分页问题优化前提","link":"#二、分页问题优化前提","children":[]},{"level":2,"title":"三、分布式场景下的分页查询","slug":"三、分布式场景下的分页查询","link":"#三、分布式场景下的分页查询","children":[]},{"level":2,"title":"四、深分页优化","slug":"四、深分页优化","link":"#四、深分页优化","children":[{"level":3,"title":"4.1、表主键id连续","slug":"_4-1、表主键id连续","link":"#_4-1、表主键id连续","children":[]},{"level":3,"title":"4.2、带 {last_条件} 查询","slug":"_4-2、带-last-条件-查询","link":"#_4-2、带-last-条件-查询","children":[]},{"level":3,"title":"4.3、子查询","slug":"_4-3、子查询","link":"#_4-3、子查询","children":[]},{"level":3,"title":"4.4、级联子查询","slug":"_4-4、级联子查询","link":"#_4-4、级联子查询","children":[]}]},{"level":2,"title":"五、参考文献","slug":"五、参考文献","link":"#五、参考文献","children":[]}],"git":{"createdTime":1718183575000,"updatedTime":1718183575000,"contributors":[{"name":"RaySunWHUT","email":"42628912+RaySunWHUT@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":3.45,"words":1035},"filePathRelative":"system design/分页问题/深分页.md","localizedDate":"2024年5月5日","excerpt":"<p>描述MySQL深分页问题&amp;解决方案</p>\\n","autoDesc":true}');export{T as comp,x as data};
