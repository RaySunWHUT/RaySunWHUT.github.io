import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o as r,c as o,b as s,d as a,a as l,e as i}from"./app-DXKPJHsU.js";const t="/assets/image-dc8thmG9.png",c="/assets/image-1-CU81sSX8.png",k="/assets/image-2-DjYmOJAb.png",d="/assets/image-3-C4V6HVBT.png",h="/assets/image-4-BXyjJUye.png",B={},y=s("p",null,"描述快速幂算法原理",-1),D=s("h2",{id:"一、快速幂基本原理",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#一、快速幂基本原理"},[s("span",null,"一、快速幂基本原理")])],-1),m=s("p",null,[s("strong",null,"基本原理"),a("：幂次分解")],-1),A=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mi",null,"a"),s("mn",null,"105")]),s("mo",null,"="),s("msup",null,[s("mi",null,"a"),s("mn",null,"1")]),s("mo",null,"∗"),s("msup",null,[s("mi",null,"a"),s("mn",null,"8")]),s("mo",null,"∗"),s("msup",null,[s("mi",null,"a"),s("mn",null,"32")]),s("mo",null,"∗"),s("msup",null,[s("mi",null,"a"),s("mn",null,"64")])]),s("annotation",{encoding:"application/x-tex"}," a^{105} = a^{1} * a^{8} * a^{32} * a^{64} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8641em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"a"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8641em"}},[s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"105")])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8641em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"a"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8641em"}},[s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"1")])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∗"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8641em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"a"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8641em"}},[s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"8")])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∗"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8641em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"a"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8641em"}},[s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"32")])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∗"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8641em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"a"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8641em"}},[s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"64")])])])])])])])])])])])])],-1),C=i('<figure><img src="'+t+'" alt="" tabindex="0"><figcaption></figcaption></figure><figure><img src="'+c+'" alt="" tabindex="0"><figcaption></figcaption></figure><figure><img src="'+k+'" alt="" tabindex="0"><figcaption></figcaption></figure><h2 id="_1-1、快速幂时间复杂度" tabindex="-1"><a class="header-anchor" href="#_1-1、快速幂时间复杂度"><span>1.1、快速幂时间复杂度</span></a></h2>',4),u=s("ol",null,[s("li",null,[s("p",null,[a("快速幂时间复杂度: "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"l"),s("mi",null,"o"),s("msubsup",null,[s("mi",null,"g"),s("mn",null,"2"),s("mi",null,"n")]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(log_{2}^{n})")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6644em"}},[s("span",{style:{top:"-2.4519em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2481em"}},[s("span")])])])])]),s("span",{class:"mclose"},")")])])]),s("br"),s("img",{src:d,alt:""})])]),s("li",null,[s("p",null,[a("整数n的二进制位数 为 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"1"),s("mo",null,"+"),s("mo",{stretchy:"false"},"⌊"),s("mi",null,"l"),s("mi",null,"o"),s("msubsup",null,[s("mi",null,"g"),s("mn",null,"2"),s("mi",null,"n")]),s("mo",{stretchy:"false"},"⌋")]),s("annotation",{encoding:"application/x-tex"},"1 + \\lfloor log_{2}^{n} \\rfloor")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"⌊"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6644em"}},[s("span",{style:{top:"-2.4519em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2481em"}},[s("span")])])])])]),s("span",{class:"mclose"},"⌋")])])]),s("br"),s("img",{src:h,alt:""})])])],-1),v=s("h3",{id:"_1-3、快速幂-c-实现",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-3、快速幂-c-实现"},[s("span",null,"1.3、快速幂-C++实现")])],-1),E={href:"https://www.nowcoder.com/practice/1a834e5e3e1a4b7ba251417554e07c00?tpId=13&tqId=23277&ru=%2Fpractice%2F00de97733b8e4f97a3fb5c680ee10720&qru=%2Fta%2Fcoding-interviews%2Fquestion-ranking&sourceUrl=",target:"_blank",rel:"noopener noreferrer"},F=i(`<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">class</span><span style="color:#6F42C1;--shiki-dark:#E5C07B;"> Solution</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">public:</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">    // 题目描述: </span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">    // 实现函数 double Power(double base, int exp)，求base的exp次方</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">    // 注: exp可能为负</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    double</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> Power</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#D73A49;--shiki-dark:#C678DD;">double</span><span style="color:#E36209;--shiki-dark:#E06C75;font-style:inherit;--shiki-dark-font-style:italic;"> base</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#D73A49;--shiki-dark:#C678DD;">int</span><span style="color:#E36209;--shiki-dark:#E06C75;font-style:inherit;--shiki-dark-font-style:italic;"> exp</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        double</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> res </span><span style="color:#D73A49;--shiki-dark:#C678DD;">=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">        // 处理exp为负的情况</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        int</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> pow </span><span style="color:#D73A49;--shiki-dark:#C678DD;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> exp </span><span style="color:#D73A49;--shiki-dark:#C678DD;">&lt;</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> ?</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> -</span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> *</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> exp </span><span style="color:#D73A49;--shiki-dark:#C678DD;">:</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> exp;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        while</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> (pow </span><span style="color:#D73A49;--shiki-dark:#C678DD;">!=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">            if</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> ((pow </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">&amp;</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="color:#D73A49;--shiki-dark:#C678DD;">==</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">                res </span><span style="color:#D73A49;--shiki-dark:#C678DD;">*=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> base;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            pow </span><span style="color:#D73A49;--shiki-dark:#C678DD;">&gt;&gt;=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            base </span><span style="color:#D73A49;--shiki-dark:#C678DD;">*=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> base;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        return</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> exp </span><span style="color:#D73A49;--shiki-dark:#C678DD;">&lt;</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> ?</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1.0</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> /</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> res </span><span style="color:#D73A49;--shiki-dark:#C678DD;">:</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> res;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、快速幂应用" tabindex="-1"><a class="header-anchor" href="#二、快速幂应用"><span>二、快速幂应用</span></a></h2><h3 id="_2-1、应用1-幂取模" tabindex="-1"><a class="header-anchor" href="#_2-1、应用1-幂取模"><span>2.1、应用1-幂取模</span></a></h3>`,3),g=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mtext",null,"计算"),s("mspace",{width:"1em"}),s("msup",null,[s("mi",null,"a"),s("mi",null,"n")]),s("mspace",{width:"1em"}),s("mi",null,"m"),s("mi",null,"o"),s("mi",null,"d"),s("mspace",{width:"1em"}),s("mi",null,"m")]),s("annotation",{encoding:"application/x-tex"}," 计算\\quad a^n \\quad mod \\quad m ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7144em"}}),s("span",{class:"mord cjk_fallback"},"计算"),s("span",{class:"mspace",style:{"margin-right":"1em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"a"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.7144em"}},[s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"1em"}}),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mspace",style:{"margin-right":"1em"}}),s("span",{class:"mord mathnormal"},"m")])])])])],-1),b=i(`<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="color:#032F62;--shiki-dark:#98C379;">&lt;iostream&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="color:#032F62;--shiki-dark:#98C379;">&lt;cmath&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="color:#032F62;--shiki-dark:#98C379;">&lt;cstdio&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="color:#032F62;--shiki-dark:#98C379;">&lt;algorithm&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="color:#032F62;--shiki-dark:#98C379;">&lt;string&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="color:#032F62;--shiki-dark:#98C379;">&lt;set&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="color:#032F62;--shiki-dark:#98C379;">&lt;unordered_set&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="color:#032F62;--shiki-dark:#98C379;">&lt;vector&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="color:#032F62;--shiki-dark:#98C379;">&lt;climits&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="color:#032F62;--shiki-dark:#98C379;">&lt;limits&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="color:#032F62;--shiki-dark:#98C379;">&lt;map&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="color:#032F62;--shiki-dark:#98C379;">&lt;unordered_map&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="color:#032F62;--shiki-dark:#98C379;">&lt;string.h&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">using</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> namespace</span><span style="color:#6F42C1;--shiki-dark:#E5C07B;"> std</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">int</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> main</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">  long</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> long</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> a, n, m;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  cin </span><span style="color:#D73A49;--shiki-dark:#C678DD;">&gt;&gt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> a </span><span style="color:#D73A49;--shiki-dark:#C678DD;">&gt;&gt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> n </span><span style="color:#D73A49;--shiki-dark:#C678DD;">&gt;&gt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> m;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">  long</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> long</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> r </span><span style="color:#D73A49;--shiki-dark:#C678DD;">=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">  while</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> (n </span><span style="color:#D73A49;--shiki-dark:#C678DD;">!=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">    // &amp;运算 需要加 括号()</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    if</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> ((n </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">&amp;</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="color:#D73A49;--shiki-dark:#C678DD;">==</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">      r </span><span style="color:#D73A49;--shiki-dark:#C678DD;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> r </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">*</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> a </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">%</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> m;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    a </span><span style="color:#D73A49;--shiki-dark:#C678DD;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> a </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">*</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> a </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">%</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> m;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    n </span><span style="color:#D73A49;--shiki-dark:#C678DD;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> n </span><span style="color:#D73A49;--shiki-dark:#C678DD;">&gt;&gt;</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  cout </span><span style="color:#D73A49;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> r </span><span style="color:#D73A49;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> endl; </span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">  return</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),f={id:"_2-2、应用2-麦森数",tabindex:"-1"},_={class:"header-anchor",href:"#_2-2、应用2-麦森数"},x={href:"https://www.luogu.com.cn/problem/P1045",target:"_blank",rel:"noopener noreferrer"},w=i(`<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="color:#032F62;--shiki-dark:#98C379;">&lt;iostream&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="color:#032F62;--shiki-dark:#98C379;">&lt;cmath&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="color:#032F62;--shiki-dark:#98C379;">&lt;cstdio&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="color:#032F62;--shiki-dark:#98C379;">&lt;algorithm&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="color:#032F62;--shiki-dark:#98C379;">&lt;string&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="color:#032F62;--shiki-dark:#98C379;">&lt;set&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="color:#032F62;--shiki-dark:#98C379;">&lt;unordered_set&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="color:#032F62;--shiki-dark:#98C379;">&lt;vector&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="color:#032F62;--shiki-dark:#98C379;">&lt;climits&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="color:#032F62;--shiki-dark:#98C379;">&lt;limits&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="color:#032F62;--shiki-dark:#98C379;">&lt;map&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="color:#032F62;--shiki-dark:#98C379;">&lt;unordered_map&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="color:#032F62;--shiki-dark:#98C379;">&lt;string.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="color:#032F62;--shiki-dark:#98C379;">&lt;queue&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">using</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> namespace</span><span style="color:#6F42C1;--shiki-dark:#E5C07B;"> std</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">int</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> res</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">[</span><span style="color:#005CC5;--shiki-dark:#D19A66;">500</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">int</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> lenRes </span><span style="color:#D73A49;--shiki-dark:#C678DD;">=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> multiple</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#D73A49;--shiki-dark:#C678DD;">int</span><span style="color:#E36209;--shiki-dark:#E06C75;font-style:inherit;--shiki-dark-font-style:italic;"> arr</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">[], </span><span style="color:#D73A49;--shiki-dark:#C678DD;">int</span><span style="color:#E36209;--shiki-dark:#E06C75;font-style:inherit;--shiki-dark-font-style:italic;"> lenArr</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#D73A49;--shiki-dark:#C678DD;">int</span><span style="color:#E36209;--shiki-dark:#E06C75;font-style:inherit;--shiki-dark-font-style:italic;"> nums</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">[], </span><span style="color:#D73A49;--shiki-dark:#C678DD;">int</span><span style="color:#E36209;--shiki-dark:#E06C75;font-style:inherit;--shiki-dark-font-style:italic;"> lenNum</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">  int</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> lenA </span><span style="color:#D73A49;--shiki-dark:#C678DD;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> lenArr </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">+</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> lenNum;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">  int</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> a</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">[lenA];</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">  memset</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(a, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#D73A49;--shiki-dark:#C678DD;">sizeof</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(a));</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">  for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="color:#D73A49;--shiki-dark:#C678DD;">int</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> i </span><span style="color:#D73A49;--shiki-dark:#C678DD;">=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">; i </span><span style="color:#D73A49;--shiki-dark:#C678DD;">&lt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> lenArr; i</span><span style="color:#D73A49;--shiki-dark:#C678DD;">++</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="color:#D73A49;--shiki-dark:#C678DD;">int</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> j </span><span style="color:#D73A49;--shiki-dark:#C678DD;">=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">; j </span><span style="color:#D73A49;--shiki-dark:#C678DD;">&lt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> lenNum; j</span><span style="color:#D73A49;--shiki-dark:#C678DD;">++</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">      a</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">[i </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">+</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> j] </span><span style="color:#D73A49;--shiki-dark:#C678DD;">+=</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> arr</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">[i] </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">*</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> nums</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">[j];</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">  for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="color:#D73A49;--shiki-dark:#C678DD;">int</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> i </span><span style="color:#D73A49;--shiki-dark:#C678DD;">=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">; i </span><span style="color:#D73A49;--shiki-dark:#C678DD;">&lt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> lenA </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">; i</span><span style="color:#D73A49;--shiki-dark:#C678DD;">++</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">    a</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">[i </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">+</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">] </span><span style="color:#D73A49;--shiki-dark:#C678DD;">+=</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> a</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">[i] </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 10</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">    a</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">[i] </span><span style="color:#D73A49;--shiki-dark:#C678DD;">%=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 10</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    if</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> (i </span><span style="color:#D73A49;--shiki-dark:#C678DD;">&lt;</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 500</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">      res</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">[i] </span><span style="color:#D73A49;--shiki-dark:#C678DD;">=</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> a</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">[i];</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    } </span><span style="color:#D73A49;--shiki-dark:#C678DD;">else</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">      break</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  lenRes </span><span style="color:#D73A49;--shiki-dark:#C678DD;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> lenA </span><span style="color:#D73A49;--shiki-dark:#C678DD;">&gt;=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 500</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> ?</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 500</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> :</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> lenA;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">int</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> arr</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">[</span><span style="color:#005CC5;--shiki-dark:#D19A66;">500</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">int</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> lenArr </span><span style="color:#D73A49;--shiki-dark:#C678DD;">=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 求解数字a的N次方(高精度)</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> compute</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#D73A49;--shiki-dark:#C678DD;">int*</span><span style="color:#E36209;--shiki-dark:#E06C75;font-style:inherit;--shiki-dark-font-style:italic;"> a</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#D73A49;--shiki-dark:#C678DD;">int*</span><span style="color:#E36209;--shiki-dark:#E06C75;font-style:inherit;--shiki-dark-font-style:italic;"> b</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#D73A49;--shiki-dark:#C678DD;">int</span><span style="color:#E36209;--shiki-dark:#E06C75;font-style:inherit;--shiki-dark-font-style:italic;"> lenA</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#D73A49;--shiki-dark:#C678DD;">int</span><span style="color:#E36209;--shiki-dark:#E06C75;font-style:inherit;--shiki-dark-font-style:italic;"> lenB</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">  int</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> len </span><span style="color:#D73A49;--shiki-dark:#C678DD;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> lenA </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">+</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> lenB;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">  int</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> c</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">[len];</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">  memset</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(c, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#D73A49;--shiki-dark:#C678DD;">sizeof</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(c));</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">  for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="color:#D73A49;--shiki-dark:#C678DD;">int</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> i </span><span style="color:#D73A49;--shiki-dark:#C678DD;">=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">; i </span><span style="color:#D73A49;--shiki-dark:#C678DD;">&lt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> lenA; i</span><span style="color:#D73A49;--shiki-dark:#C678DD;">++</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="color:#D73A49;--shiki-dark:#C678DD;">int</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> j </span><span style="color:#D73A49;--shiki-dark:#C678DD;">=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">; j </span><span style="color:#D73A49;--shiki-dark:#C678DD;">&lt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> lenB; j</span><span style="color:#D73A49;--shiki-dark:#C678DD;">++</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">      c</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">[i </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">+</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> j] </span><span style="color:#D73A49;--shiki-dark:#C678DD;">+=</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> a</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">[i] </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">*</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> b</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">[j];</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">  for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="color:#D73A49;--shiki-dark:#C678DD;">int</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> i </span><span style="color:#D73A49;--shiki-dark:#C678DD;">=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">; i </span><span style="color:#D73A49;--shiki-dark:#C678DD;">&lt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> len </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">; i</span><span style="color:#D73A49;--shiki-dark:#C678DD;">++</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">    c</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">[i </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">+</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">] </span><span style="color:#D73A49;--shiki-dark:#C678DD;">+=</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> c</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">[i] </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 10</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">    c</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">[i] </span><span style="color:#D73A49;--shiki-dark:#C678DD;">%=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 10</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    if</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> (i </span><span style="color:#D73A49;--shiki-dark:#C678DD;">&lt;</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 500</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">      arr</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">[i] </span><span style="color:#D73A49;--shiki-dark:#C678DD;">=</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> c</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">[i];</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    } </span><span style="color:#D73A49;--shiki-dark:#C678DD;">else</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">      break</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  lenArr </span><span style="color:#D73A49;--shiki-dark:#C678DD;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> len </span><span style="color:#D73A49;--shiki-dark:#C678DD;">&gt;=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 500</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> ?</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 500</span><span style="color:#D73A49;--shiki-dark:#C678DD;">:</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> len;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">int</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> main</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">  int</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> p;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  cin </span><span style="color:#D73A49;--shiki-dark:#C678DD;">&gt;&gt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> p;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">  int</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> bits </span><span style="color:#D73A49;--shiki-dark:#C678DD;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> p </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">*</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> log10</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#005CC5;--shiki-dark:#D19A66;">2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">+</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  cout </span><span style="color:#D73A49;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> bits </span><span style="color:#D73A49;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> endl;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">  memset</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(res, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#D73A49;--shiki-dark:#C678DD;">sizeof</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(res));</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">  res</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">[</span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">] </span><span style="color:#D73A49;--shiki-dark:#C678DD;">=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  lenRes </span><span style="color:#D73A49;--shiki-dark:#C678DD;">=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">  memset</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(arr, </span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#D73A49;--shiki-dark:#C678DD;">sizeof</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(arr));</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">  arr</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">[</span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">] </span><span style="color:#D73A49;--shiki-dark:#C678DD;">=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  lenArr </span><span style="color:#D73A49;--shiki-dark:#C678DD;">=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">  // 快速幂</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">  while</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> (p </span><span style="color:#D73A49;--shiki-dark:#C678DD;">!=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    if</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> ((p </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">&amp;</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="color:#D73A49;--shiki-dark:#C678DD;">==</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">      multiple</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(arr, lenArr, res, lenRes);</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">    compute</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(arr, arr, lenArr, lenArr);</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    p </span><span style="color:#D73A49;--shiki-dark:#C678DD;">&gt;&gt;=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">  res</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">[</span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">] </span><span style="color:#D73A49;--shiki-dark:#C678DD;">-=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">  for</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="color:#D73A49;--shiki-dark:#C678DD;">int</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> i </span><span style="color:#D73A49;--shiki-dark:#C678DD;">=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 500</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> -</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">; i </span><span style="color:#D73A49;--shiki-dark:#C678DD;">&gt;=</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">; i</span><span style="color:#D73A49;--shiki-dark:#C678DD;">--</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    cout </span><span style="color:#D73A49;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> res</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">[i];</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    if</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> (i </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">%</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 50</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> ==</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">      cout </span><span style="color:#D73A49;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> endl;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">  return</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、参考文献" tabindex="-1"><a class="header-anchor" href="#三、参考文献"><span>三、参考文献</span></a></h2>`,2),z={href:"https://www.bilibili.com/video/BV16Z4y1M7y1/?share_source=copy_web&vd_source=e9988d180a03a7b167558e2688c4362b",target:"_blank",rel:"noopener noreferrer"},M={href:"https://www.luogu.com.cn/blog/80614/solution-p1226",target:"_blank",rel:"noopener noreferrer"};function j(T,N){const n=e("ExternalLinkIcon");return r(),o("div",null,[y,D,m,A,C,u,v,s("p",null,[a("题源: "),s("a",E,[a("牛客-JZ16"),l(n)])]),F,g,b,s("h3",f,[s("a",_,[s("span",null,[a("2.2、应用2 "),s("a",x,[a("麦森数"),l(n)])])])]),w,s("ol",null,[s("li",null,[s("a",z,[a("https://www.bilibili.com/video/BV16Z4y1M7y1/?share_source=copy_web&vd_source=e9988d180a03a7b167558e2688c4362b"),l(n)])]),s("li",null,[s("a",M,[a("https://www.luogu.com.cn/blog/80614/solution-p1226"),l(n)])])])])}const q=p(B,[["render",j],["__file","快速幂.html.vue"]]),R=JSON.parse('{"path":"/algorithm/%E6%95%B0%E5%AD%A6%E6%8A%80%E5%B7%A7/%E5%BF%AB%E9%80%9F%E5%B9%82/%E5%BF%AB%E9%80%9F%E5%B9%82.html","title":"快速幂算法","lang":"zh-CN","frontmatter":{"title":"快速幂算法","category":["algorithm"],"tag":["快速幂"],"article":true,"date":"2024-04-09T00:00:00.000Z","description":"描述快速幂算法原理","head":[["meta",{"property":"og:url","content":"https://raysunwhut.github.io/algorithm/%E6%95%B0%E5%AD%A6%E6%8A%80%E5%B7%A7/%E5%BF%AB%E9%80%9F%E5%B9%82/%E5%BF%AB%E9%80%9F%E5%B9%82.html"}],["meta",{"property":"og:site_name","content":"浪客剑心"}],["meta",{"property":"og:title","content":"快速幂算法"}],["meta",{"property":"og:description","content":"描述快速幂算法原理"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-12T09:12:55.000Z"}],["meta",{"property":"article:tag","content":"快速幂"}],["meta",{"property":"article:published_time","content":"2024-04-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-12T09:12:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"快速幂算法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-09T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-12T09:12:55.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"一、快速幂基本原理","slug":"一、快速幂基本原理","link":"#一、快速幂基本原理","children":[]},{"level":2,"title":"1.1、快速幂时间复杂度","slug":"_1-1、快速幂时间复杂度","link":"#_1-1、快速幂时间复杂度","children":[{"level":3,"title":"1.3、快速幂-C++实现","slug":"_1-3、快速幂-c-实现","link":"#_1-3、快速幂-c-实现","children":[]}]},{"level":2,"title":"二、快速幂应用","slug":"二、快速幂应用","link":"#二、快速幂应用","children":[{"level":3,"title":"2.1、应用1-幂取模","slug":"_2-1、应用1-幂取模","link":"#_2-1、应用1-幂取模","children":[]},{"level":3,"title":"2.2、应用2 麦森数","slug":"_2-2、应用2-麦森数","link":"#_2-2、应用2-麦森数","children":[]}]},{"level":2,"title":"三、参考文献","slug":"三、参考文献","link":"#三、参考文献","children":[]}],"git":{"createdTime":1718183575000,"updatedTime":1718183575000,"contributors":[{"name":"RaySunWHUT","email":"42628912+RaySunWHUT@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":2.06,"words":618},"filePathRelative":"algorithm/数学技巧/快速幂/快速幂.md","localizedDate":"2024年4月9日","excerpt":"<p>描述快速幂算法原理</p>\\n","autoDesc":true}');export{q as comp,R as data};
