import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o as p,c as d,b as s,a,w as t,d as i,e as l}from"./app-DXKPJHsU.js";const c="/assets/image-71OpY9uG.png",k="/assets/image-1-CqdapY4V.png",h="/assets/image-2-D3EnLvoM.png",g="/assets/image-6-BdYspXgD.png",y="/assets/image-7-YGGIGmNi.png",m="/assets/image-8-CLA2-B6R.png",F="/assets/image-9-CBeQo87z.png",u="/assets/git_log2-Bm9JOD_2.png",f="/assets/image-4-B5CIivaH.png",v="/assets/git_diff2-BuSAxzPw.png",b="/assets/image-11-BsDWSZKN.png",A={},B=l('<p>git基础知识及易混淆概念整理</p><h2 id="git核心基础-知识图谱" tabindex="-1"><a class="header-anchor" href="#git核心基础-知识图谱"><span><strong>Git核心基础-知识图谱</strong></span></a></h2><figure><img src="'+c+'" alt="" tabindex="0"><figcaption></figcaption></figure><h2 id="git操作流程图" tabindex="-1"><a class="header-anchor" href="#git操作流程图"><span><strong>Git操作流程图</strong></span></a></h2><figure><img src="'+k+'" alt="" tabindex="0"><figcaption></figcaption></figure><h2 id="git名词解释" tabindex="-1"><a class="header-anchor" href="#git名词解释"><span><strong>Git名词解释</strong></span></a></h2><ul><li><strong>工作区</strong>(<strong>workspace</strong>)</li></ul><p>即在电脑里能看到的代码库目录，在 <strong>工作区(workspace)</strong> 新增、删除、修改文件。</p><ul><li><strong>暂存区(index / stage)</strong></li></ul><p>临时存放文件的变动/更改，实际上它只是一个文件(<strong>.git/index</strong>)，保存 <strong>待提交(to be committed)</strong> 文件信息。</p><p>使用 <strong><code>git add</code></strong> 命令将 <strong>工作区(workspace)</strong> 的修改保存至 <strong>暂存区(stage)</strong>。</p><ul><li><strong>本地仓库(Repository)</strong></li></ul><p>保存 <strong>已提交(committed)</strong> 的文件修改/变动。</p><p>使用 <strong><code>git commit -m &quot;msg&quot;</code></strong> 命令将 <strong>暂存区(stage)</strong> 的修改保存至 <strong>本地仓库(Repository)</strong>。</p><ul><li><strong>远程仓库(Remote)</strong></li></ul><p>使用 <strong><code>git push origin</code></strong> 命令将 <strong>本地仓库(Repository)</strong> 的修改推送至 <strong>远程仓库(Remote)</strong>。</p><ul><li><strong>头(HEAD)</strong></li></ul><p>HEAD类似一个“<strong>指针</strong>”，指向 <strong>当前分支</strong> 的 <strong>最新commit</strong>。</p><figure><img src="'+h+`" alt="" tabindex="0"><figcaption></figcaption></figure><h2 id="git命令" tabindex="-1"><a class="header-anchor" href="#git命令"><span><strong>Git命令</strong></span></a></h2><h3 id="git-push" tabindex="-1"><a class="header-anchor" href="#git-push"><span><strong>git push</strong></span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 强制推送</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> push</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> -f</span><span style="color:#032F62;--shiki-dark:#98C379;"> origin</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 将 本地 branchA 分支 的最新提交, 推送到 远程仓库的 branchB 分支</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> push</span><span style="color:#032F62;--shiki-dark:#98C379;"> branchA:branchB</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="git-stash" tabindex="-1"><a class="header-anchor" href="#git-stash"><span><strong>git stash</strong></span></a></h3><p><strong>作用</strong>：在不执行提交commit的情况下，保存当前 <strong>暂存区(stage)</strong> 的文件变更/更改(<strong>用于保存现场</strong>)。</p><p><strong>使用场景</strong>：当前正在feature分支开发需求中，功能尚未开发完成且不想进行commit，但临时遭遇突发情况，需要切换到其他分支处理问题。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 将stage区文件变动暂存</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> stash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 还原现场</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> stash</span><span style="color:#032F62;--shiki-dark:#98C379;"> pop</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 销毁暂存内容</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> stash</span><span style="color:#032F62;--shiki-dark:#98C379;"> drop</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="git-reset" tabindex="-1"><a class="header-anchor" href="#git-reset"><span><strong>git reset</strong></span></a></h3><p><strong>git reset 操作</strong> 会将代码 <strong>回退(回滚)</strong> 至指定commitId版本，根据参数项[--mixed | --soft | --hard]的不同，将HEAD与commitId之间的所有commit提交的文件变动/更改，<strong>回退</strong> 至 <strong>工作区(workspace)</strong>、<strong>暂存区(stage)</strong> 或 <strong>清除</strong>。</p><p><strong>使用注意事项⚠️</strong> :</p><ol><li><strong><code>git reset HEAD</code></strong> 仅用于 <strong>回滚</strong> <strong>git add</strong> 操作，在文件更改已 <strong>提交(commit)</strong> 至 <strong>本地仓库(Repository)</strong> 的情况下，<strong><code>git reset HEAD</code></strong>(当前分支最新commit)是没有任何效果的，什么也不会发生。</li><li>回滚 <strong>git commit 操作</strong> 需使用 <strong><code>git reset [--soft | --mixed | --hard] [commitId]</code></strong> ，且 <strong>[commitId]</strong> 必须早于 <strong>HEAD</strong>。</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> reset</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> [--soft </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> --mixed</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> |</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> --hard]</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> [HEAD </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> commitId]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># --mixed(默认)</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 作用: 将HEAD与commId之间的所有commit的文件更改/变动，全部 回退至 工作区(workspace), 即 尚未添加(add)至暂存区(stage) 的状态</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 使用场景: 撤回 git add, git commit</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># git reset HEAD 仅用于 回滚 git add 操作</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> reset</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> reset</span><span style="color:#032F62;--shiki-dark:#98C379;"> HEAD</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 回滚 git commit 操作</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 注: 此处 commitId 必须早于 HEAD 才会有效果</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> reset</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> [commitId]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># --soft</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 作用: 将HEAD与commId之间的所有commit的文件更改/变动，全部 回退 至 暂存区(stage)，即 已添加(add)至 暂存区(stage) 的状态</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> reset</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> --soft</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> [commitId]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># --hard</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 作用: 将代码 回滚 至指定commitId版本</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 注: 将HEAD与commId之间的所有commit的文件更改/变动, 全部 清除，代码切换至指定commitId版本；若操作失误则 git log 无法找到提交痕迹，可通过 git reflog 找到commitId版本并恢复。</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> reset</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> --hard</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> [commitId]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="关于-head" tabindex="-1"><a class="header-anchor" href="#关于-head"><span><strong>关于 HEAD：</strong></span></a></h4><ul><li>HEAD 表示当前版本。</li><li>HEAD^ 上一个版本</li><li>HEAD^^ 上上一个版本</li><li>HEAD^^^ 上上上一个版本</li><li>HEAD~n 回撤 n 个版本(HEAD~0等价于HEAD)，这种也是更加方便的</li></ul><h3 id="git-reflog" tabindex="-1"><a class="header-anchor" href="#git-reflog"><span><strong>git reflog</strong></span></a></h3><p>保存所有commit记录，包括使用 <strong><code>git reset --hard</code></strong> 回退的commit记录仍然可以通过 <strong><code>git reflog</code></strong> 找到。</p><h3 id="git-revert" tabindex="-1"><a class="header-anchor" href="#git-revert"><span><strong>git revert</strong></span></a></h3><p><strong><code>git revert -n [commitId]</code></strong> 操作会 “<strong>撤销↩️</strong>” 指定commitId的更改，并将指定commitId的更改 <strong>回退</strong> 至 <strong>暂存区(stage)</strong>。</p><p><strong>revert</strong> 理解为 “<strong>撤销↩️</strong>” 某个commit的更改更为合适。</p><p><strong>reset操作</strong> 是向后的，<strong>revert操作</strong> 是向前的，即在原分支最新提交的基础上生成一个新commit。</p><p><strong>深刻理解</strong>：<strong><code>git revert HEAD</code></strong> 连续执行两次就和什么也没有执行是一样的。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># revert操作 会在当前代码基础上撤回指定commit的更改，并在用户填写完commit msg后, 将 “在当前代码基础上撤回指定commit更改后的代码”，自动commit至远程分支</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> revert</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> [commitId]</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># -n: 使用 revert -n 后，会将当前commit的更改保存至暂存区，用户可进一步调整后再手动commit</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> revert</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> -n</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> [commitId]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> revert</span><span style="color:#032F62;--shiki-dark:#98C379;"> 与</span><span style="color:#032F62;--shiki-dark:#98C379;"> git</span><span style="color:#032F62;--shiki-dark:#98C379;"> reset</span><span style="color:#032F62;--shiki-dark:#98C379;"> 区别:</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 将代码 回滚 至指定commitId版本</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> reset</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> [commitId]</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 撤销↩️ 指定commitId版本的提交, 并将指定commitId版本的提交回退至 暂存区(stage)</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 注：git revert 的效果是 撤回，而 git reset 的效果是 回滚</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> revert</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> -n</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> [commitId]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="git-log" tabindex="-1"><a class="header-anchor" href="#git-log"><span><strong>git log</strong></span></a></h3><p>查看仓库分支的提交(commit)记录信息，包括commitId、提交人和提交时间描述等。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> log</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> --pretty=</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;%an(%cd) %h - %s&quot;</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> --since=</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;2022-09-01&quot;</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> --no-merges</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> --name-status</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 命令格式</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 注意: 没有这种写法: git log branchA branchB</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># git log 两点 和 空格 不一样</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> log</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> [&lt;branch&gt; </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">commit</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#032F62;--shiki-dark:#98C379;">]</span><span style="color:#005CC5;--shiki-dark:#56B6C2;">..</span><span style="color:#032F62;--shiki-dark:#98C379;">[</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;branch&gt; </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">commit</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#032F62;--shiki-dark:#98C379;">]</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> log</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> [&lt;branch&gt; </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">commit</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#032F62;--shiki-dark:#98C379;">]</span><span style="color:#005CC5;--shiki-dark:#56B6C2;">...</span><span style="color:#032F62;--shiki-dark:#98C379;">[</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;branch&gt; </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">commit</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#032F62;--shiki-dark:#98C379;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 正确✅</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> log</span><span style="color:#032F62;--shiki-dark:#98C379;"> testMater...testSun</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 错误❌</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 注: git 两点log 和三点diff 的 &quot;点(.)&quot; 前后不能有空格</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> log</span><span style="color:#032F62;--shiki-dark:#98C379;"> testMater</span><span style="color:#032F62;--shiki-dark:#98C379;"> ...</span><span style="color:#032F62;--shiki-dark:#98C379;"> testSun</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="git-log-两点-比较" tabindex="-1"><a class="header-anchor" href="#git-log-两点-比较"><span><strong>git log 两点(..)比较</strong></span></a></h4><p>展示 <strong>分支B拥有而分支A没有的所有提交</strong>。</p><p><img src="`+g+'" alt="" width="450" height="220"> <img src="'+y+'" alt="" width="450" height="220"></p><h4 id="git-log-三点-比较" tabindex="-1"><a class="header-anchor" href="#git-log-三点-比较"><span>git log <strong>三点(…)比较</strong></span></a></h4>',49),C=l('<p>展示 <strong>分支B拥有而分支A没有的所有提交，以及，分支A拥有而分支B没有的所有提交</strong>。</p><p><img src="'+m+'" alt="" width="450" height="220"> <img src="'+F+'" alt="" width="450" height="220"></p><figure><img src="'+u+`" alt="网上流传的原图都包浆了，太丑了，重新绘制(不带水印！)" tabindex="0"><figcaption>网上流传的原图都包浆了，太丑了，重新绘制(不带水印！)</figcaption></figure><h3 id="git-diff" tabindex="-1"><a class="header-anchor" href="#git-diff"><span><strong>git diff</strong></span></a></h3><p>可在分支、commit之间执行 diff。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 命令格式</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 空格 和 .. 比较等价</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> diff</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> [&lt;branch&gt; </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">commit</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#032F62;--shiki-dark:#98C379;">]</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> [&lt;branch&gt; </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">commit</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#032F62;--shiki-dark:#98C379;">]</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> diff</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> [&lt;branch&gt; </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">commit</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#032F62;--shiki-dark:#98C379;">]</span><span style="color:#005CC5;--shiki-dark:#56B6C2;">..</span><span style="color:#032F62;--shiki-dark:#98C379;">[</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;branch&gt; </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">commit</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#032F62;--shiki-dark:#98C379;">]</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> diff</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> [&lt;branch&gt; </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">commit</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#032F62;--shiki-dark:#98C379;">]</span><span style="color:#005CC5;--shiki-dark:#56B6C2;">...</span><span style="color:#032F62;--shiki-dark:#98C379;">[</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;branch&gt; </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">commit</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#032F62;--shiki-dark:#98C379;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 正确✅</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> diff</span><span style="color:#032F62;--shiki-dark:#98C379;"> testMater...testSun</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 错误❌</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 注: git 两点diff 和三点diff 的 &quot;点(.)&quot; 前后不能有空格</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> diff</span><span style="color:#032F62;--shiki-dark:#98C379;"> testMater</span><span style="color:#032F62;--shiki-dark:#98C379;"> ...</span><span style="color:#032F62;--shiki-dark:#98C379;"> testSun</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="git-diff-两点-比较-三点-比较" tabindex="-1"><a class="header-anchor" href="#git-diff-两点-比较-三点-比较"><span><strong>git diff 两点(..)比较 &amp;&amp; 三点(...)比较</strong></span></a></h4>`,7),E=s("b",null,"注: 从集合交、并逻辑来看，diff两点比较与log三点比较结果相同，diff三点比较与log两点比较结果相同 ",-1),D=s("strong",null,"ps",-1),_=s("strong",null,[s("code",null,"git log A...B")],-1),x=s("strong",null,[s("code",null,"git log B...A")],-1),w=s("strong",null,[s("code",null,"git diff A..B")],-1),I=s("strong",null,[s("code",null,"git diff B..A")],-1),H=s("b",null,"+(增)",-1),q=s("b",null,"-(减)",-1),G=s("b",null,"-(减)",-1),R=s("b",null,"+(增)",-1),T=s("br",null,null,-1),N=s("img",{src:f,alt:"",width:"510",height:"500"},null,-1),S=s("img",{src:v,alt:"网上流传的原图都包浆了，太丑了，重新绘制(不带水印！)",width:"410",height:"500"},null,-1),Z=l(`<h3 id="git-文件类型" tabindex="-1"><a class="header-anchor" href="#git-文件类型"><span><strong>git 文件类型</strong></span></a></h3><p>在 Git 中，文件可以分为以下几类：</p><ul><li><strong>已修改文件(modified)</strong>：在 <strong>工作区(workspace)</strong> 中已修改，但尚未添加到 <strong>暂存区(stage)</strong> 的文件。</li><li><strong>已暂存文件(staged)</strong>：已通过 git add 命令添加到 <strong>暂存区(stage)</strong> 的新增/已修改文件。</li><li><strong>未修改文件(unmodified)</strong>：如名。</li><li><strong>未追踪文件(Untracked)</strong>：在Git工作区中存在，但尚未添加到Git版本控制系统中的文件。</li><li><strong>忽略文件(Ignored)</strong>：<strong>.gitignore</strong>文件中指定的文件，这些文件不会被 Git 跟踪，也不会显示在 <strong>未追踪文件(Untracked)</strong> 中。</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 使用git status 可查看到标颜色文件</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> status</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+b+`" alt="" tabindex="0"><figcaption></figcaption></figure><h3 id="工作区-workspace-命令" tabindex="-1"><a class="header-anchor" href="#工作区-workspace-命令"><span>工作区(workspace)命令</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 销毁 工作区(workspace) 文件变动/更改</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># -d：同时删除未被跟踪的目录。</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># -f 或 --force：强制执行删除操作，不再提示确认</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> clean</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> -df</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 查看 工作区(workspace) 文件变动/更改</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 注: 使用该命令无法检测到 未追踪文件(Untracked file)</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> diff</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># -n: 用于查看未追踪文件(Untracked)列表</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> clean</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> -n</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="暂存区-stage-命令" tabindex="-1"><a class="header-anchor" href="#暂存区-stage-命令"><span>暂存区(stage)命令</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 将 暂存区(stage) 文件变动/更改回退至 工作区(workspace) </span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> reset</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> restore</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> --staged</span><span style="color:#032F62;--shiki-dark:#98C379;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 销毁 暂存区(stage) 内容</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> stash</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> stash</span><span style="color:#032F62;--shiki-dark:#98C379;"> drop</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 查看 暂存区(stage) 内容(对比 暂存区(stage) 与 工作区(workspace) 的差异)</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> diff</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> [--staged </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> --cached]</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 查看某个文件在 暂存区(stage) 与 工作区(workspace) 的差异</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> diff</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> [--staged </span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> --cached]</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="color:#032F62;--shiki-dark:#98C379;">file-pat</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">h</span><span style="color:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="本地仓库-repository-命令" tabindex="-1"><a class="header-anchor" href="#本地仓库-repository-命令"><span>本地仓库(Repository)命令</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 比较本地分支与远程分支差异</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 注: 注意两点比较和三点比较的区别</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> diff</span><span style="color:#032F62;--shiki-dark:#98C379;"> main..origin/main</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="清除远程分支引用" tabindex="-1"><a class="header-anchor" href="#清除远程分支引用"><span>清除远程分支引用</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"># 清理本地仓库中已被删除的远程分支引用，可使用以下2条命令的任意一条</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> remote</span><span style="color:#032F62;--shiki-dark:#98C379;"> prune</span><span style="color:#032F62;--shiki-dark:#98C379;"> origin</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="color:#032F62;--shiki-dark:#98C379;"> fetch</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> --prune</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考文献" tabindex="-1"><a class="header-anchor" href="#参考文献"><span>参考文献</span></a></h2>`,14),M={href:"https://stackoverflow.com/questions/7251477/what-are-the-differences-between-double-dot-and-triple-dot-in-git-dif",target:"_blank",rel:"noopener noreferrer"},j={href:"https://stackoverflow.com/questions/462974/what-are-the-differences-between-double-dot-and-triple-dot-in-git-com",target:"_blank",rel:"noopener noreferrer"},z={href:"https://juejin.cn/post/6869519303864123399",target:"_blank",rel:"noopener noreferrer"};function U(V,L){const n=r("font"),e=r("ExternalLinkIcon");return p(),d("div",null,[B,s("p",null,[s("strong",null,[a(n,{color:"#C3002E"},{default:t(()=>[i("注")]),_:1}),i(": git log三点(…)比较的两个分支 "),a(n,{color:"#C3002E"},{default:t(()=>[i("没有前后顺序之分")]),_:1}),i("。")])]),C,a(n,{color:"C3002E"},{default:t(()=>[E]),_:1}),s("p",null,[D,i(": 虽然二者逻辑结果相同，但仍有细微差别，log三点比较没有前后顺序之分(即 "),_,i(" 与 "),x,i(" 结果完全一致)，但diff两点比较( "),w,i(" 与 "),I,i(" )虽然逻辑结果相同，但实际执行返回结果是不同的，体现在交换顺序后，"),a(n,{color:"#43b244"},{default:t(()=>[H]),_:1}),i(" -> "),a(n,{color:"#C3002E"},{default:t(()=>[q]),_:1}),i("，"),a(n,{color:"#C3002E"},{default:t(()=>[G]),_:1}),i(" -> "),a(n,{color:"#43b244"},{default:t(()=>[R]),_:1}),T,N,i(),S]),Z,s("ol",null,[s("li",null,[s("a",M,[i("https://stackoverflow.com/questions/7251477/what-are-the-differences-between-double-dot-and-triple-dot-in-git-dif"),a(e)])]),s("li",null,[s("a",j,[i("https://stackoverflow.com/questions/462974/what-are-the-differences-between-double-dot-and-triple-dot-in-git-com"),a(e)])]),s("li",null,[s("a",z,[i("https://juejin.cn/post/6869519303864123399"),a(e)])])])])}const P=o(A,[["render",U],["__file","git基础知识.html.vue"]]),J=JSON.parse('{"path":"/components/git/git%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/git%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html","title":"git核心基础知识","lang":"zh-CN","frontmatter":{"title":"git核心基础知识","category":["中间件"],"tag":["git"],"date":"2023-07-22T00:00:00.000Z","star":true,"description":"git基础知识及易混淆概念整理","head":[["meta",{"property":"og:url","content":"https://raysunwhut.github.io/components/git/git%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/git%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html"}],["meta",{"property":"og:site_name","content":"浪客剑心"}],["meta",{"property":"og:title","content":"git核心基础知识"}],["meta",{"property":"og:description","content":"git基础知识及易混淆概念整理"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-02T15:08:48.000Z"}],["meta",{"property":"article:tag","content":"git"}],["meta",{"property":"article:published_time","content":"2023-07-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-02T15:08:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"git核心基础知识\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-22T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-02T15:08:48.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Git核心基础-知识图谱","slug":"git核心基础-知识图谱","link":"#git核心基础-知识图谱","children":[]},{"level":2,"title":"Git操作流程图","slug":"git操作流程图","link":"#git操作流程图","children":[]},{"level":2,"title":"Git名词解释","slug":"git名词解释","link":"#git名词解释","children":[]},{"level":2,"title":"Git命令","slug":"git命令","link":"#git命令","children":[{"level":3,"title":"git push","slug":"git-push","link":"#git-push","children":[]},{"level":3,"title":"git stash","slug":"git-stash","link":"#git-stash","children":[]},{"level":3,"title":"git reset","slug":"git-reset","link":"#git-reset","children":[]},{"level":3,"title":"git reflog","slug":"git-reflog","link":"#git-reflog","children":[]},{"level":3,"title":"git revert","slug":"git-revert","link":"#git-revert","children":[]},{"level":3,"title":"git log","slug":"git-log","link":"#git-log","children":[]},{"level":3,"title":"git diff","slug":"git-diff","link":"#git-diff","children":[]},{"level":3,"title":"git 文件类型","slug":"git-文件类型","link":"#git-文件类型","children":[]},{"level":3,"title":"工作区(workspace)命令","slug":"工作区-workspace-命令","link":"#工作区-workspace-命令","children":[]},{"level":3,"title":"暂存区(stage)命令","slug":"暂存区-stage-命令","link":"#暂存区-stage-命令","children":[]},{"level":3,"title":"本地仓库(Repository)命令","slug":"本地仓库-repository-命令","link":"#本地仓库-repository-命令","children":[]},{"level":3,"title":"清除远程分支引用","slug":"清除远程分支引用","link":"#清除远程分支引用","children":[]}]},{"level":2,"title":"参考文献","slug":"参考文献","link":"#参考文献","children":[]}],"git":{"createdTime":1690055411000,"updatedTime":1714662528000,"contributors":[{"name":"RaySunWHUT","email":"913283849@qq.com","commits":7}]},"readingTime":{"minutes":7.22,"words":2166},"filePathRelative":"components/git/git基础知识/git基础知识.md","localizedDate":"2023年7月22日","excerpt":"<p>git基础知识及易混淆概念整理</p>\\n","autoDesc":true}');export{P as comp,J as data};
